---
# Base task for configuring a Raspi

- name: 'Setting hostname'
  hostname:
    name: "{{hostname}}"
  tags: admin

- name: 'Transfer init scripts'
  become: yes
  become_method: sudo
  copy: src=./ dest=/home/pi/init/ mode=0755

- name: 'Thin out Raspbian'
  become: yes
  become_method: sudo
  shell: /home/pi/init/anti-raspbian-bloat.sh

- apt: update_cache=yes
  name: 'Update apt cache'
  become: yes
  become_method: sudo

- apt: upgrade=dist
  name: 'Upgrade apt dist'
  become: yes
  become_method: sudo

- name: 'Configure locale'
  become: yes
  become_method: sudo
  shell: /home/pi/init/configure-locale.sh

- name: 'Set timezone'
  become: yes
  become_method: sudo
  shell: /home/pi/init/set-timezone.sh

- name: 'Set keyboard layout'
  become: yes
  become_method: sudo
  shell: /home/pi/init/set-keyboard-layout.sh

- name: 'Install packages'
  apt:
    pkg={{item}}
    state=installed
  become: yes
  become_method: sudo
  with_items:
    - tightvncserver

- name: Set default DNS
  become: True
  template:
    src="resolv.conf.j2"
    dest="/etc/resolv.conf"
    owner=root
    group=root
    mode=0644
  tags: admin

- name: Set static IP configuration
  become: True
  template:
    src="dhcpcd.j2"
    dest="/etc/dhcpcd.conf"
    owner=root
    group=root
    mode=0644
  tags: admin

- name: Add the user 'pihole' with a bash shell
  user:
    name: "{{user_pihole}}"
    shell: /bin/bash
    append: yes
  tags: pihole

- name: "Download Pi-Hole installer"
  get_url:
      url: http://install.pi-hole.net
      dest: ~/install-pihole.sh
      mode: 0740
      validate_certs: False
  tags: pihole

- name: Create pihole configuration directory
  become: True
  file:
    name="{{ fspath_pihole_config }}"
    state=directory
    owner="{{ user_pihole }}"
    group="{{ group_pihole }}"
    mode=0755
  tags: pihole

- name: Create pihole configuration
  become: True
  template:
    src="setupVars.conf.j2"
    dest="{{ fspath_pihole_config }}/setupVars.conf"
    owner=root
    group=root
    mode=0644
  tags: pihole

- name: Install Pi-Hole
  shell: "~/install-pihole.sh --unattended"
  register: dbg_install_pihole
  tags: pihole

- name: Set PiHole to update every week
  become: True
  replace:
    path: /etc/cron.d/pihole
    regexp: '^#(.*updatePihole.*)$'
    replace: '\1'
    backup: yes
  tags: pihole


# - name: 'Reboot'
#   become: yes
#   become_method: sudo
#   command: shutdown -r now "Ansible updates triggered"
#   async: 0
#   poll: 0
#   ignore_errors: true
